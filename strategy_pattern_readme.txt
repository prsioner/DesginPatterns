策略模式

1.情景
有一天天朝王国遭受到了强势外敌的入侵，国王须动员力量来保护王国，抵抗力量可能包括军队的战士、册封的骑士、还有自告奋勇的民兵等，
甚至需要亲自上阵来鼓舞士气。所有这些抵抗军都需要使用武器才能正面抗敌，武器可是是斧子、长剑、弓箭、火枪等等。国王当然使用自己的
佩剑作为武器。骑士、射手等军队战士固定使用他们常用的武器来对抗，上战场的民兵并不固定使用何种武器(拿到什么用什么
，都是临场发挥)，而只为获取战斗的胜利保家卫国。如何更好的使用Java 语言描述战士们使用各种武器抗敌的情景

2.分析
我们可以从情景中得到一些信息
2.1. 所有战士都有共同的行为，那就是都能与敌人战斗（只是他们以往各自角色不同）
2.2. 所有的武器都有杀伤力能杀敌，只是使用技巧(杀敌技巧)不同
2.3. 常规军使用固定武器
2.4. 民兵的武器是不固定的，需临时分配(或者自己携带武器)

3.考虑的解决方法
第一考虑到的是使用一个战士超类，能进行各种武器的使用，然后具体角色继承这个战士类，实现里面的战斗方法，这样显然是有不足的，
因为有些人员并不是所有武器都会用，重载所有方法中，有些方法是无效的，所以单靠继承是无法满足需求的
那如何解决呢，这里提供一种思路，那就是把战士("客户")，与使用的武器（"行为"）分离开,战士只需关注与上战场战斗，而不需要关注
具体使用何种武器，因为你的武器在军备库会为你提供或者是你自己能使用的东西，这样武器就以接口的方式向不同的战士提供战斗方式。
这也就是策略模式，通过人员与工具组合的方式来完成战斗


4.总结
策略模式的官方定义——定义算法簇，分别封装起来，让他们之间可以相互替换，次模式让算法的变化独立于使用算法的客户
